<launch>
    <arg name="velodyne64_calibration_online" default="true" />
    <!--If 'velodyne64_calibration_online' is true, 'velodyne64_calibration_file' will not use  -->
    <arg name="velodyne64_calibration_file" default="$(find velodyne_pointcloud)/params/64E_S3_calibration_example.yaml"/>
    <arg name="extrinsics_velodyne64" default="$(find velodyne_pointcloud)/params/velodyne64_novatel_extrinsics_example.yaml"/>
    <arg name="velodyne16_calibration_file" default="$(find velodyne_pointcloud)/params/VLP16_calibration.yaml"/>
    <arg name="extrinsics_velodyne16" default="$(find velodyne_pointcloud)/params/velodyne16_novatel_extrinsics_example.yaml"/>
    <arg name="velodyne64_frame_id" default="velodyne64"/>
    <arg name="velodyne16_frame_id" default="velodyne16"/>
    <arg name="organized" default="true"/>
    <arg name="min_range" default="0.9" />
    <arg name="max_range_64" default="70.0" />
    <arg name="max_range_16" default="70.0" />
    <arg name="rpm" default="600"/>
    <!-- 64E_S3D_STRONGEST | 64E_S3D_LATEST | 64E_S3D_DUAL -->
    <arg name="model_64" default="64E_S3D_STRONGEST" />
    <arg name="model_16" default="VLP16" />
    <!-- 100ms -->
    <arg name="tf_query_timeout" default="0.1"/>

  <include file="$(find velodyne_pointcloud)/launch/nodelet_manager.launch">
  </include>
    <!--  HDL64E -->
    <!--  driver nodelets -->
  <include file="$(find velodyne_driver)/launch/driver_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne64_driver"/>
    <arg name="model" value="$(arg model_64)"/>
    <arg name="rpm" value="$(arg rpm)"/>
    <arg name="frame_id" value="$(arg velodyne64_frame_id)"/>
    <arg name="topic" value="/apollo/sensor/velodyne64/VelodyneScanUnified"/>    
  </include>
  
  <!-- start cloud nodelet using test calibration file -->
  <include file="$(find velodyne_pointcloud)/launch/convert_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne64_convert"/>
    <arg name="model" value="$(arg model_64)"/>
    <arg name="calibration_online" value="$(arg velodyne64_calibration_online)" />
    <arg name="calibration" default="$(arg velodyne64_calibration_file)" />
    <arg name="organized" default="$(arg organized)"/>
    <arg name="min_range" default="$(arg min_range)" />
    <arg name="max_range" default="$(arg max_range_64)" />
    <arg name="topic_pointcloud" default="/apollo/sensor/velodyne64/PointCloud2"/>
    <arg name="topic_packets" default="/apollo/sensor/velodyne64/VelodyneScanUnified"/>
  </include>
  
   <!-- start 64 compensator nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/compensator_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne64_compensator"/>
    <arg name="child_frame_id" value="$(arg velodyne64_frame_id)"/>
    <arg name="tf_query_timeout" value="$(arg tf_query_timeout)"/>
    <arg name="topic_pointcloud" value="/apollo/sensor/velodyne64/PointCloud2"/>
    <arg name="topic_compensated_pointcloud" value="/apollo/sensor/velodyne64/compensator/PointCloud2"/>
  </include>

    <!--  VLP16 -->
    <!--  driver nodelets -->
  <include file="$(find velodyne_driver)/launch/driver_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne16_driver"/>
    <arg name="model" value="$(arg model_16)"/>
    <arg name="rpm" value="$(arg rpm)"/>
    <arg name="frame_id" value="$(arg velodyne16_frame_id)"/>
    <arg name="topic" value="/apollo/sensor/velodyne16/VelodyneScanUnified"/>    
    <arg name="firing_data_port" value="2369"/>
    <arg name="positioning_data_port" value="8309"/>
  </include>
  
  <!-- start cloud nodelet using test calibration file -->
  <include file="$(find velodyne_pointcloud)/launch/convert_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne16_convert"/>
    <arg name="model" value="$(arg model_16)"/>
    <arg name="calibration" default="$(arg velodyne16_calibration_file)" />
    <arg name="organized" default="$(arg organized)"/>
    <arg name="min_range" default="$(arg min_range)" />
    <arg name="max_range" default="$(arg max_range_16)" />
    <arg name="topic_pointcloud" default="/apollo/sensor/velodyne16/PointCloud2"/>
    <arg name="topic_packets" default="/apollo/sensor/velodyne16/VelodyneScanUnified"/>
  </include>
  
   <!-- start 16 compensator nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/compensator_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne16_compensator"/>
    <arg name="child_frame_id" value="$(arg velodyne16_frame_id)"/>
    <arg name="tf_query_timeout" value="$(arg tf_query_timeout)"/>
    <arg name="topic_pointcloud" value="/apollo/sensor/velodyne16/PointCloud2"/>
    <arg name="topic_compensated_pointcloud" value="/apollo/sensor/velodyne16/compensator/PointCloud2"/>
  </include>


</launch>
