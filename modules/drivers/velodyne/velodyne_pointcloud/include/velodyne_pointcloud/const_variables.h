/******************************************************************************
 * Copyright 2017 The Apollo Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *****************************************************************************/

#ifndef MODULES_DRIVERS_VELODYNE_VELODYNE_POINTCLOUD_CONST_VARIABLES_H_
#define MODULES_DRIVERS_VELODYNE_VELODYNE_POINTCLOUD_CONST_VARIABLES_H_

#include <iostream>

namespace apollo {
namespace drivers {
namespace velodyne {

// default topics
const std::string TOPIC_PREFIX = "/apollo/sensor/velodyne/";
const std::string TOPIC_PACKTES = "VelodyneScanUnified";
const std::string TOPIC_POINTCLOUD = TOPIC_PREFIX + "PointCloud2";
const std::string TOPIC_COMPENSATED_POINTCLOUD =
    TOPIC_PREFIX + "compensator/PointCloud2";

/**
* @brief Order array for re-ordering point cloud.
* Refer to Velodyne official manual
*/
const int ORDER_64[64] = {38, 39, 42, 43, 32, 33, 36, 37, 40, 41, 46, 47, 50,
                          51, 54, 55, 44, 45, 48, 49, 52, 53, 58, 59, 62, 63,
                          34, 35, 56, 57, 60, 61, 6,  7,  10, 11, 0,  1,  4,
                          5,  8,  9,  14, 15, 18, 19, 22, 23, 12, 13, 16, 17,
                          20, 21, 26, 27, 30, 31, 2,  3,  24, 25, 28, 29};

// micro second
const float INNER_TIME_64[12][32] = {
    {419.30, 418.57, 417.84, 417.12, 416.39, 415.66, 414.93, 414.20,
     413.48, 412.75, 412.02, 411.29, 410.56, 409.84, 409.11, 408.38,
     407.65, 406.92, 406.20, 405.47, 404.74, 404.01, 403.28, 402.56,
     401.83, 401.10, 400.37, 399.64, 398.92, 398.19, 397.46, 396.73},
    {419.30, 418.57, 417.84, 417.12, 416.39, 415.66, 414.93, 414.20,
     413.48, 412.75, 412.02, 411.29, 410.56, 409.84, 409.11, 408.38,
     407.65, 406.92, 406.20, 405.47, 404.74, 404.01, 403.28, 402.56,
     401.83, 401.10, 400.37, 399.64, 398.92, 398.19, 397.46, 396.73},
    {396.00, 395.28, 394.55, 393.82, 393.09, 392.36, 391.64, 390.91,
     390.18, 389.45, 388.72, 388.00, 387.27, 386.54, 385.81, 385.08,
     384.36, 383.63, 382.90, 382.17, 381.44, 380.72, 379.99, 379.26,
     378.53, 377.80, 377.08, 376.35, 375.62, 374.89, 374.16, 373.44},
    {396.00, 395.28, 394.55, 393.82, 393.09, 392.36, 391.64, 390.91,
     390.18, 389.45, 388.72, 388.00, 387.27, 386.54, 385.81, 385.08,
     384.36, 383.63, 382.90, 382.17, 381.44, 380.72, 379.99, 379.26,
     378.53, 377.80, 377.08, 376.35, 375.62, 374.89, 374.16, 373.44},
    {372.71, 371.98, 371.25, 370.52, 369.80, 369.07, 368.34, 367.61,
     366.88, 366.16, 365.43, 364.70, 363.97, 363.24, 362.52, 361.79,
     361.06, 360.33, 359.60, 358.88, 358.15, 357.42, 356.69, 355.96,
     355.24, 354.51, 353.78, 353.05, 352.32, 351.60, 350.87, 350.14},
    {372.71, 371.98, 371.25, 370.52, 369.80, 369.07, 368.34, 367.61,
     366.88, 366.16, 365.43, 364.70, 363.97, 363.24, 362.52, 361.79,
     361.06, 360.33, 359.60, 358.88, 358.15, 357.42, 356.69, 355.96,
     355.24, 354.51, 353.78, 353.05, 352.32, 351.60, 350.87, 350.14},
    {349.41, 348.68, 347.96, 347.23, 346.50, 345.77, 345.04, 344.32,
     343.59, 342.86, 342.13, 341.40, 340.68, 339.95, 339.22, 338.49,
     337.76, 337.04, 336.31, 335.58, 334.85, 334.12, 333.40, 332.67,
     331.94, 331.21, 330.48, 329.76, 329.03, 328.30, 327.57, 326.84},
    {349.41, 348.68, 347.96, 347.23, 346.50, 345.77, 345.04, 344.32,
     343.59, 342.86, 342.13, 341.40, 340.68, 339.95, 339.22, 338.49,
     337.76, 337.04, 336.31, 335.58, 334.85, 334.12, 333.40, 332.67,
     331.94, 331.21, 330.48, 329.76, 329.03, 328.30, 327.57, 326.84},
    {326.12, 325.39, 324.66, 323.93, 323.20, 322.48, 321.75, 321.02,
     320.29, 319.56, 318.84, 318.11, 317.38, 316.65, 315.92, 315.20,
     314.47, 313.74, 313.01, 312.28, 311.56, 310.83, 310.10, 309.37,
     308.64, 307.92, 307.19, 306.46, 305.73, 305.00, 304.28, 303.55},
    {326.12, 325.39, 324.66, 323.93, 323.20, 322.48, 321.75, 321.02,
     320.29, 319.56, 318.84, 318.11, 317.38, 316.65, 315.92, 315.20,
     314.47, 313.74, 313.01, 312.28, 311.56, 310.83, 310.10, 309.37,
     308.64, 307.92, 307.19, 306.46, 305.73, 305.00, 304.28, 303.55},
    {302.82, 302.09, 301.36, 300.64, 299.91, 299.18, 298.45, 297.72,
     297.00, 296.27, 295.54, 294.81, 294.08, 293.36, 292.63, 291.90,
     291.17, 290.44, 289.72, 288.99, 288.26, 287.53, 286.80, 286.08,
     285.35, 284.62, 283.89, 283.16, 282.44, 281.71, 280.98, 280.25},
    {302.82, 302.09, 301.36, 300.64, 299.91, 299.18, 298.45, 297.72,
     297.00, 296.27, 295.54, 294.81, 294.08, 293.36, 292.63, 291.90,
     291.17, 290.44, 289.72, 288.99, 288.26, 287.53, 286.80, 286.08,
     285.35, 284.62, 283.89, 283.16, 282.44, 281.71, 280.98, 280.25}};

const float INNER_TIME_64E_S3[12][32] = {
    {172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9,
     158.4, 157.1, 155.9, 154.7, 151.2, 149.9, 148.7, 147.5,
     144,   142.7, 141.5, 140.3, 136.8, 135.5, 134.3, 133.1,
     129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9, 118.7},
    {172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9,
     158.4, 157.1, 155.9, 154.7, 151.2, 149.9, 148.7, 147.5,
     144,   142.7, 141.5, 140.3, 136.8, 135.5, 134.3, 133.1,
     129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9, 118.7},
    {172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9,
     158.4, 157.1, 155.9, 154.7, 151.2, 149.9, 148.7, 147.5,
     144,   142.7, 141.5, 140.3, 136.8, 135.5, 134.3, 133.1,
     129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9, 118.7},
    {172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9,
     158.4, 157.1, 155.9, 154.7, 151.2, 149.9, 148.7, 147.5,
     144,   142.7, 141.5, 140.3, 136.8, 135.5, 134.3, 133.1,
     129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9, 118.7},
    {115.2, 113.9, 112.7, 111.5, 108,  106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
     97.1,  93.6,  92.3,  91.1,  89.9, 86.4,  85.1,  83.9,  82.7,  79.2, 77.9,
     76.7,  75.5,  72,    70.7,  69.5, 68.3,  64.8,  63.5,  62.3,  61.1},
    {115.2, 113.9, 112.7, 111.5, 108,  106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
     97.1,  93.6,  92.3,  91.1,  89.9, 86.4,  85.1,  83.9,  82.7,  79.2, 77.9,
     76.7,  75.5,  72,    70.7,  69.5, 68.3,  64.8,  63.5,  62.3,  61.1},
    {115.2, 113.9, 112.7, 111.5, 108,  106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
     97.1,  93.6,  92.3,  91.1,  89.9, 86.4,  85.1,  83.9,  82.7,  79.2, 77.9,
     76.7,  75.5,  72,    70.7,  69.5, 68.3,  64.8,  63.5,  62.3,  61.1},
    {115.2, 113.9, 112.7, 111.5, 108,  106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
     97.1,  93.6,  92.3,  91.1,  89.9, 86.4,  85.1,  83.9,  82.7,  79.2, 77.9,
     76.7,  75.5,  72,    70.7,  69.5, 68.3,  64.8,  63.5,  62.3,  61.1},
    {57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7,
     39.5, 36,   34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3,
     19.1, 17.9, 14.4, 13.1, 11.9, 10.7, 7.2,  5.9,  4.7,  3.5},
    {57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7,
     39.5, 36,   34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3,
     19.1, 17.9, 14.4, 13.1, 11.9, 10.7, 7.2,  5.9,  4.7,  3.5},
    {57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7,
     39.5, 36,   34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3,
     19.1, 17.9, 14.4, 13.1, 11.9, 10.7, 7.2,  5.9,  4.7,  3.5},
    {57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7,
     39.5, 36,   34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3,
     19.1, 17.9, 14.4, 13.1, 11.9, 10.7, 7.2,  5.9,  4.7,  3.5}};

}  // namespace velodyne
}  // namespace drivers
}  // namespace apollo

#endif  // MODULES_DRIVERS_VELODYNE_VELODYNE_POINTCLOUD_CONST_VARIABLES_H_
