####################################################################
# Flags from lib/config_manager/config_manager.cc
# The ModelConfig config paths file.
# type: string
# default: ./conf/config_manager.config
--config_manager_path=./conf/config_manager.config

# Project work root directory.
# type: string
# default: ""
--work_root=modules/perception

#######################################################################
# Flags from onboard/onboard_main.cpp
# Onboard DAG Streaming config.
# type: string
# default: conf/dag_streaming.config
--dag_config_path=./conf/dag_streaming_lowcost.config

# Node name register in ROS.
# type: string
# default: obstacle_detection_node
--ros_node_name=perception_obstacle

# num of threads for ros callback.
# type: int32
# default: 1
--num_thread_ros_spin=3

# Set to use CPU core count, 0 means not limited.
# type: int32
# default: 0
--use_cpu_count=0

########################################################################
# Flags from onboard/dag_streaming.cpp
# Num work threads in DAGStreaming ThreadPool
# type: int32
# default: 4
--num_threads_in_dag=4

# When DAGStreaming event_queues max length
# greater than max_allowed_congestion_value, reset DAGStreaming.
# (default is 0, disable this feature.))
# type: int32
# default: 0
--max_allowed_congestion_value=0

# whether timing clean shared data.
# type: bool
# default: false
--enable_timing_remove_stale_data=true

###########################################################################
# Flags from onboard/event_manager.cpp
# The max size of event queue.
# type: int32
# default: 1000
--max_event_queue_size=1

###########################################################################
# Flags from onboard/stream_input.cpp
# Time interval in ms for file stream callback.
# type: int32
# default: 20
--fs_callback_interval=20

# queue size for subscribe
# type: int32
# default: 1
--subscribe_queue_size=1

###########################################################################
# Flags from onboard/stream_output.cpp
# queue size for publish
# type: int32
# default: 10
--publish_queue_size=10

###########################################################################
# Flags from obstacle/onboard/fusion_subnode.cpp
# fusion name which enabled onboard.
# type: string
# default:
#--onboard_fusion=ProbabilisticFusion
--onboard_fusion=SightlineFusion

# whether publish result before fusing
# type: bool
# default: false
--publish_prefusing_result=false

###########################################################################
# Flags from obstacle/onboard/radar_detector_subnode.cpp
# Radar Detector plugin name.
# type: string
# default:
--radar_detector=PreprocessRadarDetector

# whether convert timestamp to gps timestamp
# type: bool
# default: false
--convert2gps_timestamp=true

# whether use protobuf message
# type: bool
# default: true
--radar_use_protobuf=false

###########################################################################
# Flags from obstacle/onboard/lidar_visualization_subnode.cpp
# enable visualization for output
# type: string
# default: PclVisualizer
--frame_visualizer=GLFusionVisualizer

# type: bool
# default: false
--show_front_radar_raw=false

# type: bool
# default: false
--show_back_radar_raw=false

# type: bool
# default: false
--show_front_radar_objects=false

# type: bool
# default: false
--show_back_radar_objects=false

# type: bool
# default: false
--show_radar_objects=false

# type: bool
# default: false
--show_camera_objects=true

# type: bool
# default: false
--show_camera_objects2d=true

# type: bool
# default: false
--show_fused_objects=false

# type: bool
# default: false
--show_fusion_association=false

# type: bool
# default: false
--capture_screen=false

# type: string
# default: ./
--screen_output_dir=./

# type: bool
# default: false
--show_camera_parsing=true

###########################################################################
# Flags from onboard/common_shared_data.cpp
# the time threshold longer than which the data becomes stale, in second
# type: int32
# default: 5
--shared_data_stale_time=5

# onboard camera transformer.
# type: string
# default: DummyCameraDetector MultiCueCameraTransformer GeometryCameraTransformer
--onboard_camera_transformer=GeometryCameraTransformer

--size_scale=1.2
# onboard camera tracker.
# type: string
# default: DummyCameraTracker MixCameraTracker OnlineCameraTracker
--onboard_camera_tracker=OnlineCameraTracker

# onboard lane camera parser.
# type: string
# default: DummyCameraParser
#--onboard_lane_camera_parser=DummyCameraParser
--onboard_lane_camera_parser=LaneCameraParser

# onboard mix camera detector
# type: string
# default: YoloCameraDetector
--onboard_mix_camera_detector=YoloCameraDetector
--onboard_mix_camera_transformer=MultiCueCameraTransformer
--onboard_mix_camera_tracker=OnlineCameraTracker

###########################################################################
# Flags from obstacle/onboard/lane_post_processer_subnode.cpp
# onboard lane post-processer.
# type: string
# default: CCLanePostProcesser CCLineProcesser
--onboard_lane_post_processer=CCLanePostProcesser
