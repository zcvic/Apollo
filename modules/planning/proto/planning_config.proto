syntax = "proto2";

package apollo.planning;

import "modules/planning/proto/dp_poly_path_config.proto";
import "modules/planning/proto/dp_st_speed_config.proto";
import "modules/planning/proto/qp_spline_path_config.proto";
import "modules/planning/proto/qp_st_speed_config.proto";
import "modules/planning/proto/poly_st_speed_config.proto";
import "modules/planning/proto/navi_path_decider_config.proto";
import "modules/planning/proto/navi_speed_decider_config.proto";
import "modules/planning/proto/navi_obstacle_decider_config.proto";
import "modules/planning/proto/planner_open_space_config.proto";

enum TaskType {
  DP_POLY_PATH_OPTIMIZER = 0;
  DP_ST_SPEED_OPTIMIZER = 1;
  QP_SPLINE_PATH_OPTIMIZER = 2;
  QP_SPLINE_ST_SPEED_OPTIMIZER = 3;
  PATH_DECIDER = 4;
  SPEED_DECIDER = 5;
  POLY_ST_SPEED_OPTIMIZER = 6;
  NAVI_PATH_DECIDER = 7;
  NAVI_SPEED_DECIDER = 8;
  NAVI_OBSTACLE_DECIDER = 9;
};

message ScenarioLaneFollowConfig {
  repeated TaskType task = 1;
  optional apollo.planning.DpPolyPathConfig dp_poly_path_config = 2;
  optional apollo.planning.DpStSpeedConfig dp_st_speed_config = 3;
  optional apollo.planning.QpSplinePathConfig qp_spline_path_config = 4;
  optional apollo.planning.QpStSpeedConfig qp_st_speed_config = 5;
  optional apollo.planning.PolyStSpeedConfig poly_st_speed_config = 6;
}

message ScenarioConfig {
  enum ScenarioType {
    LANE_FOLLOW = 0;  // default scenario
    CHANGE_LANE = 1;
    SIDE_PASS = 2;  // go around an object when it blocks the road
    APPROACH = 3;  // approach to an intersection
    INTERSECTION_STOP_SIGN_FOUR_WAY = 4;
    INTERSECTION_STOP_SIGN_ONE_OR_TWO_WAY = 5;
    INTERSECTION_TRAFFIC_LIGHT_LEFT_TURN = 6;
    INTERSECTION_TRAFFIC_LIGHT_RIGHT_TURN = 7;
    INTERSECTION_TRAFFIC_LIGHT_GO_THROUGH = 8;
  }

  optional ScenarioType scenario_type = 1;
  oneof scenario {
    ScenarioLaneFollowConfig scenario_lane_follow_config = 2;
  }
};

message PlannerRTKonfig {
}

message PlannerEMConfig {
  optional ScenarioConfig scenario_config = 1;
}

message PlannerLatticeonfig {
}

message PlannerNaviConfig {
  repeated TaskType task = 1;
  optional apollo.planning.NaviPathDeciderConfig  navi_path_decider_config = 2;
  optional apollo.planning.NaviSpeedDeciderConfig  navi_speed_decider_config = 3;
  optional apollo.planning.NaviObstacleDeciderConfig  navi_obstacle_decider_config = 4;
}

message PlanningConfig {
  enum PlannerType {
    RTK = 0;
    EM = 1;  // expectation maximization
    LATTICE = 2;
    NAVI = 3; // navigation planner
    OPENSPACE = 4; // open space planner
  };
  optional PlannerType planner_type = 1 [default = EM];
  oneof planner_config {
    PlannerRTKonfig planner_rtk_config = 2;
    PlannerEMConfig planner_em_config = 3;
    PlannerLatticeonfig planner_lattice_config = 4;
    PlannerNaviConfig planner_navi_config = 5;
    PlannerOpenSpaceConfig planner_open_space_config = 6;
  }
}
