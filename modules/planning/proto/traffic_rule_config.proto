syntax = "proto2";

package apollo.planning;

message BacksideVehicleConfig {
  // a vehicle is considered within current lane if it is behind the ADC and its lateral difference is less than this number.
  optional double backside_lane_width = 1 [default=4.0];
}

message ChangeLaneConfig {
  optional double min_overtake_distance = 1 [default=10.0];
  optional double min_overtake_time = 2 [default=2.0];
  optional bool  enable_guard_obstacle = 3 [default=false];
  optional double guard_distance = 4 [default=100.0];
  optional double min_guard_speed = 5 [default=1.0];
}

message CIPVConfig {
}

message CreepConfig {
  optional bool enabled = 1;
  // min boundary t to ignore obstacles while creeping
  optional double min_boundary_t = 2[ default=6.0 ]; // second
  // stop distance(m) to the stop line of next lane overlap while creeping
  optional double stop_distance = 3 [ default=0.5 ]; // meter
}

message CrosswalkConfig {
  // stop distance from stop line of crosswalk
  optional double stop_distance = 1 [ default=1.0 ]; // meter
  optional double max_stop_deceleration = 2  [ default=6.0 ];
  // min s_distance for adc to be considered have passed crosswalk (stop_line_end_s)
  optional double min_pass_s_distance = 3 [ default=1.0 ]; // meter
  // expand s_distance for pedestrian/bicycle detection
  optional double expand_s_distance = 4 [ default=2.0 ]; // meter
  // strick stop rule within this l_distance
  optional double stop_strick_l_distance = 5 [ default=4.0 ]; // meter
  // loose stop rule beyond this l_distance
  optional double stop_loose_l_distance = 6 [ default=5.0 ]; // meter
}

message DestinationConfig {
}

message KeepClearConfig {
  // min s_distance to be considered have passed keep_clear (stop_line_end_s)
  optional double min_pass_s_distance = 1 [ default=2.0 ]; // meter
}

message ReferenceLineEndConfig {
  optional double stop_acc_to_max_deceleration_ratio = 1 [ default=3.0 ];
  optional double min_reference_line_remain_length = 2 [ default=10.0 ];
}

message ReroutingConfig {
  // should not rerouting more frequent than this number
  optional double cooldown_time = 1 [default = 0.6];  // seconds
}

message SidePassConfig {
}

message SignalLightConfig {
}

message StopSignConfig {
  // stop distance from stop line of stop sign
  optional double stop_distance = 1 [ default=1.0 ]; // meter
  optional double max_stop_deceleration = 2  [ default=6.0 ];
  // min s_distance for adc to be considered have passed stop_sign (stop_line_end_s)
  optional double min_pass_s_distance = 3 [ default=1.0 ]; // meter
  // max speed(m/s) to be considered as a valid stop
  optional double max_valid_stop_speed = 4 [ default=0.2 ]; // m/s
  // max distance(m) to the stop line to be considered as a valid stop
  optional double max_valid_stop_distance = 5 [ default=3.0 ]; // meter
  // min time(seconds) to be considered as a full stop at stop sign
  optional double stop_duration = 6 [ default=1.0 ]; // seconds
  // max speed(m/s) for watch vehicles to be considered as
  // a valid stop.(this check is looser than adc)
  optional double watch_vehicle_max_valid_stop_speed = 7 [ default=0.5 ]; // m/s
  // max stop distance for watch vehicles to be considered as
  // a valid stop.(this check is looser than adc)
  optional double watch_vehicle_max_valid_stop_distance = 8 [ default=5.0 ]; // meter
  optional CreepConfig creep = 9;
}

// TODO(all) migrate all other traffic rules to pb config
message TrafficRuleConfig {
  enum RuleId {
    BACKSIDE_VEHICLE = 1;
    CHANGE_LANE = 2;
    CIPV = 3;
    CROSSWALK = 4;
    DESTINATION = 5;
    KEEP_CLEAR = 6;
    REFERENCE_LINE_END = 7;
    REROUTING = 8;
    SIDE_PASS_VEHICLE = 9;
    SIGNAL_LIGHT = 10;
    STOP_SIGN = 11;
  }
  optional RuleId rule_id = 1;
  optional bool enabled = 2;
  oneof config {
    BacksideVehicleConfig backside_vehicle = 3;
    ChangeLaneConfig change_lane = 4;
    CIPVConfig cipv = 5;
    CrosswalkConfig crosswalk = 6;
    DestinationConfig destination = 7;
    KeepClearConfig keep_clear = 8;
    ReferenceLineEndConfig reference_line_end = 9;
    ReroutingConfig rerouting = 10;
    SidePassConfig side_pass = 11;
    SignalLightConfig signal_light = 12;
    StopSignConfig stop_sign = 13;
  }
}

message TrafficRuleConfigs {
  repeated TrafficRuleConfig config = 1;
}
