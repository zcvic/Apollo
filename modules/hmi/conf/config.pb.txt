server {
  https {
    enabled: false
    server_key: 'modules/common/data/ssl_keys/server.key'
    server_cert: 'modules/common/data/ssl_keys/server.crt'
  }
}
modules {
  name: "GPS"
  display_name: "GPS Driver"
  supported_commands {
    name: "start"
    command: "scripts/gps.sh"
    command: "start"
    stdout_file: "data/log/gnss_driver.stdout"
    stderr_file: "data/log/gnss_driver.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/gps.sh"
    command: "stop"
    stdout_file: "data/log/gnss_driver.stdout"
    stderr_file: "data/log/gnss_driver.stderr"
  }
}
modules {
  name: "velodyne"
  display_name: "Velodyne"
  supported_commands {
    name: "start"
    command: "scripts/velodyne.sh"
    command: "start"
    stdout_file: "data/log/velodyne.stdout"
    stderr_file: "data/log/velodyne.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/velodyne.sh"
    command: "stop"
    stdout_file: "data/log/velodyne.stdout"
    stderr_file: "data/log/velodyne.stderr"
  }
}
modules {
  name: "mobileye"
  display_name: "Mobileye"
  supported_commands {
    name: "start"
    command: "scripts/mobileye.sh"
    command: "start"
    stdout_file: "data/log/mobileye.stdout"
    stderr_file: "data/log/mobileye.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/mobileye.sh"
    command: "stop"
    stdout_file: "data/log/mobileye.stdout"
    stderr_file: "data/log/mobileye.stderr"
  }
}
modules {
  name: "localization"
  display_name: "Localization"
  supported_commands {
    name: "start"
    command: "scripts/localization.sh"
    command: "start"
    stdout_file: "data/log/localization.stdout"
    stderr_file: "data/log/localization.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/localization.sh"
    command: "stop"
    stdout_file: "data/log/localization.stdout"
    stderr_file: "data/log/localization.stderr"
  }
}
modules {
  name: "perception"
  display_name: "Perception"
  supported_commands {
    name: "start"
    command: "scripts/perception.sh"
    command: "start"
    stdout_file: "data/log/perception.stdout"
    stderr_file: "data/log/perception.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/perception.sh"
    command: "stop"
    stdout_file: "data/log/perception.stdout"
    stderr_file: "data/log/perception.stderr"
  }
}
modules {
  name: "third_party_perception"
  display_name: "Third Party Perception"
  supported_commands {
    name: "start"
    command: "scripts/third_party_perception.sh"
    command: "start"
    stdout_file: "data/log/third_party_perception.stdout"
    stderr_file: "data/log/third_party_perception.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/third_party_perception.sh"
    command: "stop"
    stdout_file: "data/log/third_party_perception.stdout"
    stderr_file: "data/log/third_party_perception.stderr"
  }
}
modules {
  name: "prediction"
  display_name: "Prediction"
  supported_commands {
    name: "start"
    command: "scripts/prediction.sh"
    command: "start"
    stdout_file: "data/log/prediction.stdout"
    stderr_file: "data/log/prediction.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/prediction.sh"
    command: "stop"
    stdout_file: "data/log/prediction.stdout"
    stderr_file: "data/log/prediction.stderr"
  }
}
modules {
  name: "planning"
  display_name: "Planning"
  supported_commands {
    name: "start"
    command: "scripts/planning.sh"
    command: "start"
    stdout_file: "data/log/planning.stdout"
    stderr_file: "data/log/planning.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/planning.sh"
    command: "stop"
    stdout_file: "data/log/planning.stdout"
    stderr_file: "data/log/planning.stderr"
  }
}
modules {
  name: "routing"
  display_name: "Routing"
  supported_commands {
    name: "start"
    command: "scripts/routing.sh"
    command: "start"
    stdout_file: "data/log/routing.stdout"
    stderr_file: "data/log/routing.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/routing.sh"
    command: "stop"
    stdout_file: "data/log/routing.stdout"
    stderr_file: "data/log/routing.stderr"
  }
}
modules {
  name: "control"
  display_name: "Control"
  supported_commands {
    name: "start"
    command: "scripts/control.sh"
    command: "start"
    stdout_file: "data/log/control.stdout"
    stderr_file: "data/log/control.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/control.sh"
    command: "stop"
    stdout_file: "data/log/control.stdout"
    stderr_file: "data/log/control.stderr"
  }
}
modules {
  name: "canbus"
  display_name: "CAN Bus"
  supported_commands {
    name: "start"
    command: "scripts/canbus.sh"
    command: "start"
    stdout_file: "data/log/canbus.stdout"
    stderr_file: "data/log/canbus.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/canbus.sh"
    command: "stop"
    stdout_file: "data/log/canbus.stdout"
    stderr_file: "data/log/canbus.stderr"
  }
}
modules {
  name: "dreamview"
  display_name: "Dreamview"
  supported_commands {
    name: "start"
    command: "scripts/dreamview.sh"
    command: "start"
    stdout_file: "data/log/dreamview.stdout"
    stderr_file: "data/log/dreamview.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/dreamview.sh"
    command: "stop"
    stdout_file: "data/log/dreamview.stdout"
    stderr_file: "data/log/dreamview.stderr"
  }
}
modules {
  name: "record_bag"
  display_name: "Record Bag"
  supported_commands {
    name: "start"
    command: "scripts/record_bag.sh"
    command: "start"
    stdout_file: "data/log/record_bag.stdout"
    stderr_file: "data/log/record_bag.stderr"
  }
  supported_commands {
    name: "stop"
    command: "scripts/record_bag.sh"
    command: "stop"
    stdout_file: "data/log/record_bag.stdout"
    stderr_file: "data/log/record_bag.stderr"
  }
}
tools {
  name: "start_recording"
  command: "scripts/run_rtk_recorder.sh"
  stdout_file: "data/log/rtk_recorder.stdout"
  stderr_file: "data/log/rtk_recorder.stderr"
}
tools {
  name: "stop_recording"
  command: "scripts/stop_rtk_recorder.sh"
  stdout_file: "data/log/stop_rtk_recorder.stdout"
  stderr_file: "data/log/stop_rtk_recorder.stderr"
}
tools {
  name: "start_player"
  command: "scripts/run_rtk_player.sh"
  stdout_file: "data/log/rtk_player.stdout"
  stderr_file: "data/log/rtk_player.stderr"
}
tools {
  name: "stop_player"
  command: "scripts/stop_rtk_player.sh"
  stdout_file: "data/log/stop_rtk_player.stdout"
  stderr_file: "data/log/stop_rtk_player.stderr"
}
hardware {
  name: "GPS"
  display_name: "GPS"
  supported_commands {
    name: "health_check"
    command: "scripts/hw_check.sh"
    command: "gps"
  }
}
hardware {
  name: "CAN"
  display_name: "CAN"
  supported_commands {
    name: "health_check"
    command: "scripts/hw_check.sh"
    command: "can"
  }
}
