syntax = "proto2";

package apollo.canbus;

message Motion_control_instruction_111 {
// Control Message
  // [rad] [-32.768|32.767]
  optional double steer_instruction = 1;
  // [m/s] [-32.768|32.767]
  optional double speed_instruction = 2;
}

message Brake_control_command_131 {
// Control Message
  enum Brake_control_commandType {
    BRAKE_CONTROL_COMMAND_BRAKE_RELEASE = 0;
    BRAKE_CONTROL_COMMAND_BRAKE_LOCK = 1;
  }
  // [] [0|255]
  optional Brake_control_commandType brake_control_command = 1;
}

message Chassis_status_feedback_211 {
// Report Message
  enum Brake_statusType {
    BRAKE_STATUS_BRAKE_RELEASE = 0;
    BRAKE_STATUS_BRAKE_LOCK = 1;
  }
  enum Control_modeType {
    CONTROL_MODE_STANDBY = 0;
    CONTROL_MODE_CAN_COMMAND_CONTROL = 1;
    CONTROL_MODE_REMOTE_CONTROL = 3;
  }
  enum Current_vehicle_statusType {
    CURRENT_VEHICLE_STATUS_SYSTEM_OK = 0;
    CURRENT_VEHICLE_STATUS_EMERGENCY_SHUTDOWND_MODE = 1;
    CURRENT_VEHICLE_STATUS_SYSTEM_EXCEPTION = 2;
  }
  // [] [0|255]
  optional int32 count = 1;
  // [] [0|0]
  optional Brake_statusType brake_status = 2;
  // [] [0|0]
  optional int32 fault_message = 3;
  // [V] [0|6553.5]
  optional double battery_voltage = 4;
  // [] [0|255]
  optional Control_modeType control_mode = 5;
  // [] [0|255]
  optional Current_vehicle_statusType current_vehicle_status = 6;
}

message Motion_control_feedback_221 {
// Report Message
  // [rad] [-32.768|32.767]
  optional double steer = 1;
  // [m/s] [-32.768|32.767]
  optional double speed = 2;
}

message High_steering_motor_feedback_251 {
// Report Message
  // [PN] [0|0]
  optional int32 high_motor_position = 1;
  // [A] [-3276.8|3276.7]
  optional double high_motor_current = 2;
  // [RPM] [-32768|32767]
  optional int32 high_motor_rpm = 3;
}

message High_rightback_motor_feedback_252 {
// Report Message
  // [PN] [0|0]
  optional int32 high_motor_position = 1;
  // [A] [-3276.8|3276.7]
  optional double high_motor_current = 2;
  // [RPM] [-32768|32767]
  optional int32 high_motor_rpm = 3;
}

message High_leftback_motor_feedback_253 {
// Report Message
  // [PN] [0|0]
  optional int32 high_motor_position = 1;
  // [A] [-3276.8|3276.7]
  optional double high_motor_current = 2;
  // [RPM] [-32768|32767]
  optional int32 high_motor_rpm = 3;
}

message Low_steering_motor_feedback_261 {
// Report Message
  // [] [0|255]
  optional int32 low_motordriver_status = 1;
  // [] [-128|127]
  optional int32 low_motor_temperature = 2;
  // [] [0|0]
  optional int32 low_motordriver_temperature = 3;
  // [V] [0|6553.5]
  optional double low_motordirver_voltage = 4;
}

message Low_rightback_motor_feedback_262 {
// Report Message
  // [] [0|255]
  optional int32 low_motordriver_status = 1;
  // [] [-128|127]
  optional int32 low_motor_temperature = 2;
  // [] [0|0]
  optional int32 low_motordriver_temperature = 3;
  // [V] [0|6553.5]
  optional double low_motordirver_voltage = 4;
}

message Low_leftback_motor_feedback_263 {
// Report Message
  // [] [0|255]
  optional int32 low_motordriver_status = 1;
  // [] [-128|127]
  optional int32 low_motor_temperature = 2;
  // [] [0|0]
  optional int32 low_motordriver_temperature = 3;
  // [V] [0|6553.5]
  optional double low_motordirver_voltage = 4;
}

message Mileage_feedback_311 {
// Report Message
  // [mm] [-2147483648|2147483647]
  optional int32 rightback_milemeter = 1;
  // [mm] [-2147483648|2147483647]
  optional int32 leftback_milemeter = 2;
}

message Bms_data_feedback_361 {
// Report Message
  // [] [0|6553.5]
  optional double bms_battery_temperature = 1;
  // [A] [0|6553.5]
  optional double bms_battery_current = 2;
  // [V] [0|655.35]
  optional double bms_battery_voltage = 3;
  // [] [0|0]
  optional int32 bms_battery_soh = 4;
  // [] [0|255]
  optional int32 bms_battery_soc = 5;
}

message Bms_status_feedback_362 {
// Report Message
  // [] [0|0]
  optional int32 bms_warning_status_2 = 1;
  // [] [0|0]
  optional int32 bms_warning_status_1 = 2;
  // [] [0|0]
  optional int32 bms_alarm_status_2 = 3;
  // [] [0|0]
  optional int32 bms_alarm_status_1 = 4;
}

message Control_mode_setting_421 {
// Control Message
  enum Control_mode_settingType {
    CONTROL_MODE_SETTING_STANDBY = 0;
    CONTROL_MODE_SETTING_CAN_COMMAND_CONTROL = 1;
  }
  // [] [0|255]
  optional Control_mode_settingType control_mode_setting = 1;
}

message Steering_zore_setting_431 {
// Report Message
  // [] [0|255]
  optional int32 set_zero = 1;
}

message Steering_zore_setting_feedback_43a {
// Report Message
  // [] [0|255]
  optional int32 set_zero_done_flag = 1;
}

message Status_setting_441 {
// Control Message
  enum Error_clear_instructionType {
    ERROR_CLEAR_INSTRUCTION_CLEAR_ALL_NON_CRITICAL_FAULTS = 0;
    ERROR_CLEAR_INSTRUCTION_CLEAR_STEER_COMMUNICATE_FAILURE = 1;
    ERROR_CLEAR_INSTRUCTION_CLEAR_BACK_RIGHT_MOTOR_FAILURE = 2;
    ERROR_CLEAR_INSTRUCTION_CLEAR_BACK_LEFT_MOTOR_FAILURE = 3;
    ERROR_CLEAR_INSTRUCTION_NON = 4;
    ERROR_CLEAR_INSTRUCTION_CLEAR_BATTERY_UNDERVOLTAGE_FAULT = 5;
    ERROR_CLEAR_INSTRUCTION_CLEAR_STEER_ENCODER_COMMUNICATE = 6;
    ERROR_CLEAR_INSTRUCTION_CELAR_REMOTE_CONTROL_SIGNAL_LOSS = 7;
  }
  // [] [0|255]
  optional Error_clear_instructionType error_clear_instruction = 1;
}

message Hunter2 {
  optional Motion_control_instruction_111 motion_control_instruction_111 = 1; // control message
  optional Brake_control_command_131 brake_control_command_131 = 2; // control message
  optional Chassis_status_feedback_211 chassis_status_feedback_211 = 3; // report message
  optional Motion_control_feedback_221 motion_control_feedback_221 = 4; // report message
  optional High_steering_motor_feedback_251 high_steering_motor_feedback_251 = 5; // report message
  optional High_rightback_motor_feedback_252 high_rightback_motor_feedback_252 = 6; // report message
  optional High_leftback_motor_feedback_253 high_leftback_motor_feedback_253 = 7; // report message
  optional Low_steering_motor_feedback_261 low_steering_motor_feedback_261 = 8; // report message
  optional Low_rightback_motor_feedback_262 low_rightback_motor_feedback_262 = 9; // report message
  optional Low_leftback_motor_feedback_263 low_leftback_motor_feedback_263 = 10; // report message
  optional Mileage_feedback_311 mileage_feedback_311 = 11; // report message
  optional Bms_data_feedback_361 bms_data_feedback_361 = 12; // report message
  optional Bms_status_feedback_362 bms_status_feedback_362 = 13; // report message
  optional Control_mode_setting_421 control_mode_setting_421 = 14; // control message
  optional Steering_zore_setting_431 steering_zore_setting_431 = 15; // report message
  optional Steering_zore_setting_feedback_43a steering_zore_setting_feedback_43a = 16; // report message
  optional Status_setting_441 status_setting_441 = 17; // control message
}
