/******************************************************************************
 * Copyright 2017 The Apollo Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *****************************************************************************/

 syntax = "proto2";

 package apollo.localization;
 
 // LiDAR-based loclaization module status
 enum LocalLidarStatus {
     MSF_LOCAL_LIDAR_00 = 0; // Localization result satisfy threshold
     MSF_LOCAL_LIDAR_01 = 1; // Can't find localization map (config.xml)
     MSF_LOCAL_LIDAR_02 = 2; // Missing extrinsic parameters
     MSF_LOCAL_LIDAR_03 = 3; // Fail to load localization map
     MSF_LOCAL_LIDAR_04 = 4; // No output (comparing to timestamp of imu msg)
     MSF_LOCAL_LIDAR_05 = 5; // Coverage of online pointcloud and map is lower than threshold 
     MSF_LOCAL_LIDAR_06 = 6; // Localization result do not meet threshold
     MSF_LOCAL_LIDAR_07 = 7; // others
 }
 
 enum LocalLidarQuality {
     MSF_LOCAL_LIDAR_VERY_GOOD = 0;
     MSF_LOCAL_LIDAR_GOOD = 1;
     MSF_LOCAL_LIDAR_NOT_BAD = 2;
     MSF_LOCAL_LIDAR_BAD = 3;
 }
 
 // LiDAR-based localization result check (the difference between lidar and sins result)
 enum LocalLidarConsistency {
     MSF_LOCAL_LIDAR_CONSISTENCY_00 = 0; // The difference is less than threshold 1
     MSF_LOCAL_LIDAR_CONSISTENCY_01 = 1; // The difference is bigger than threshold 1 but less than threshold 2
     MSF_LOCAL_LIDAR_CONSISTENCY_02 = 2; // The difference is bigger than threshold 2
     MSF_LOCAL_LIDAR_CONSISTENCY_03 = 3; // others
 }
 
 // GNSS-based localization result check (the difference between GNSS and sins result)
 enum GnssConsistency {
     MSF_GNSS_CONSISTENCY_00 = 0; // The difference is less than threshold 1
     MSF_GNSS_CONSISTENCY_01 = 1; // The difference is bigger than threshold 1 but less than threshold 2
     MSF_GNSS_CONSISTENCY_02 = 2; // The difference is bigger than threshold 2
     MSF_GNSS_CONSISTENCY_03 = 3; // others
 }
 
 // IMU msg status
 enum ImuMsgDelayStatus {
     IMU_DELAY_NORMAL = 0;
     IMU_DELAY_1 = 1;
     IMU_DELAY_2 = 2;
     IMU_DELAY_3 = 3;
     IMU_DELAY_ABNORMAL = 4;
 }
 
 enum ImuMsgMissingStatus {
     IMU_MISSING_NORMAL = 0;
     IMU_MISSING_1 = 1;
     IMU_MISSING_2 = 2;
     IMU_MISSING_3 = 3;
     IMU_MISSING_4 = 4;
     IMU_MISSING_5 = 5;
     IMU_MISSING_ABNORMAL = 6;
 }
 
 enum ImuMsgDataStatus {
     IMU_DATA_NORMAL = 0;
     IMU_DATA_ABNORMAL = 1;
     IMU_DATA_OTHER = 2;
 }
 
 // The running status of localization module
 enum MsfRunningStatus {
     MSF_SOL_LIDAR_GNSS = 0;
     MSF_SOL_X_GNSS = 1;
     MSF_SOL_LIDAR_X = 2;
     MSF_SOL_LIDAR_XX = 3;
     MSF_SOL_LIDAR_XXX = 4;
     MSF_SOL_X_X = 5;
     MSF_SOL_X_XX = 6;
     MSF_SOL_X_XXX = 7;
     MSF_SSOL_LIDAR_GNSS = 8;
     MSF_SSOL_X_GNSS = 9;
     MSF_SSOL_LIDAR_X = 10;
     MSF_SSOL_LIDAR_XX = 11;
     MSF_SSOL_LIDAR_XXX = 12;
     MSF_SSOL_X_X = 13;
     MSF_SSOL_X_XX = 14;
     MSF_SSOL_X_XXX = 15;
     MSF_NOSOL_LIDAR_GNSS = 16;
     MSF_NOSOL_X_GNSS = 17;
     MSF_NOSOL_LIDAR_X = 18;
     MSF_NOSOL_LIDAR_XX = 19;
     MSF_NOSOL_LIDAR_XXX = 20;
     MSF_NOSOL_X_X = 21;
     MSF_NOSOL_X_XX = 22;
     MSF_NOSOL_X_XXX = 23;
     MSF_RUNNING_INIT = 24;
 }
 
 // The status of sensor msg
 message MsfSensorMsgStatus
 {
     optional ImuMsgDelayStatus imu_delay_status = 1;
     optional ImuMsgMissingStatus imu_missing_status = 2;
     optional ImuMsgDataStatus imu_data_status = 3;
 }
 
 // The status of msf localization module
 message MsfStatus
 {    
     optional LocalLidarConsistency local_lidar_consistency = 1;
     optional GnssConsistency gnss_consistency = 2;
     optional LocalLidarStatus local_lidar_status = 3;
     optional uint32 gnsspos_position_type = 4; //NovAtel gnsspos's position type  92 represents arm param file missing, 91 msg missing, 93 other
     optional MsfRunningStatus msf_running_status = 7;
     optional LocalLidarQuality local_lidar_quality = 9;
 }